;; output.z80 - Set the name of the console driver to use for output
;;
;; This uses the custom BIOS function we've added to the BIOS, which was never
;; present in real CP/M.  Consider it a hook into the emulator.
;;

FCB1:                 EQU 0x5C
BDOS_ENTRY_POINT:     EQU 5
BDOS_OUTPUT_STRING:   EQU 9

        ;;
        ;; CP/M programs start at 0x100.
        ;;
        ORG 100H

        call exit_if_not_cpmulator

        ;; The FCB will be populated with the first argument,
        ;; if the first character of that region is a space-character
        ;; then we've got nothing specified
        ld a, (FCB1 + 1)
        cp 0x20                  ; 0x20 = 32 == SPACE
        jp z, show_driver        ; Got a space, show the console driver name


        ;; OK we're running under cpmulator
        ;; Point DE to the console-string to set, and invoke the function.
        ld HL, 02
        ld de, FCB1 + 1
        ld a, 31
        out (0xff), a

exit:
        LD      C,0x00
        CALL    BDOS_ENTRY_POINT

;; Show the current console driver
show_driver:
        ld de, CONSOLE_PREFIX       ; show a prefix
        ld c,  BDOS_OUTPUT_STRING
        call   BDOS_ENTRY_POINT

        ld HL, 02                   ; Get the driver name into the DMA area
        ld de, 0x0000
        ld a, 31
        out (0xff), a

        ld hl, 0x0080               ; print the contents of the DMA area, as a string
        call print_string

        ld de, CONSOLE_SUFFIX       ; Show a suffix
        ld c,  BDOS_OUTPUT_STRING
        call   BDOS_ENTRY_POINT
        jr exit

;;
;; Text output strings.
;;
CONSOLE_PREFIX:
        db "The output driver is set to $"
CONSOLE_SUFFIX:
        db ".", 0x0a, 0x0d, "$"

include "common.inc"
END
