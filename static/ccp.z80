;; ccp.z80 - Set the name of the CCP to load.
;;
;; This uses the custom BIOS function we've added to the BIOS, which was never
;; present in real CP/M.  Consider it a hook into the emulator.
;;

FCB1:                 EQU 0x5C
BDOS_OUTPUT_STRING:   EQU 9
BDOS_ENTRY_POINT:     EQU 5


        ;;
        ;; CP/M programs start at 0x100.
        ;;
        ORG 100H

        call exit_if_not_cpmulator

        ;; The FCB will be populated with the first argument,
        ;; if the first character of that region is a space-character
        ;; then we've got nothing specified
        ld a, (FCB1 + 1)
        cp 0x20                  ; 0x20 = 32 == SPACE
        jp z, show_ccp          ; Got a space, show the CCP

        ld HL, 03
        ld de, FCB1 + 1
        ld a, 31
        out (0xff), a

exit:
        LD      C,0x00
        CALL    BDOS_ENTRY_POINT


;; Show the current CCP
show_ccp:
        LD DE, CCP_PREFIX
        LD C, BDOS_OUTPUT_STRING
        CALL BDOS_ENTRY_POINT

        ld HL, 03
        ld de, 0x0000
        ld a, 31
        out (0xff), a

        LD HL, 0x0080
loopy:
        LD A, (HL)
        cp 0
        JR Z, finished_loop
        push HL
             ld e,a
             ld c, 0x02
             call 0x0005
        pop HL
        inc hl
        jr loopy
finished_loop:
        LD DE, CCP_SUFFIX
        LD C, BDOS_OUTPUT_STRING
        CALL BDOS_ENTRY_POINT
        jr exit


;;
;; Text output strings.
;;
CCP_PREFIX:
        db "CCP is set to $"
CCP_SUFFIX:
        db ".", 0x0a, 0x0d, "$"


include "common.inc"
END
