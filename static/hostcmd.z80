;; hostcmd.z80 - Enable executing commands on the host
;;
;; This uses the custom BIOS function we've added to the BIOS, which was never
;; present in real CP/M.  Consider it a hook into the emulator.
;;

FCB1:                 EQU 0x5C
BDOS_ENTRY_POINT:     EQU 5
BDOS_OUTPUT_STRING:   EQU 9

        ;;
        ;; CP/M programs start at 0x100.
        ;;
        ORG 100H

        ;; Test that we're running under cpmulator by calling the
        ;; "is cpmulator" function.
        ld HL, 0x0000
        ld a, 31
        out (0xff), a

        ;; We expect SKX to appear in registers HLA
        CP 'X'
        jr nz, not_cpmulator

        LD A, H
        CP 'S'
        jr nz, not_cpmulator

        LD A, L
        CP 'K'
        jr nz, not_cpmulator

        ;; The FCB will be populated with the first argument,
        ;; if the first character of that region is a space-character
        ;; then we've got nothing specified
        ld a, (FCB1 + 1)
        cp 0x20                  ; 0x20 = 32 == SPACE
        jp z, show_value

        ;; OK we're running under cpmulator - set the prefix
        ld HL, 08
        ld de, FCB1 + 1
        ld a, 31
        out (0xff), a

exit:
        LD      C,0x00
        CALL    BDOS_ENTRY_POINT


;; Show the current value
show_value:
        ;; just set the first byte of the DMA area to null
        LD HL, 0x0080
        LD (HL), 0x00

        ld HL, 08
        ld de, 0x0000
        ld a, 31
        out (0xff), a

        ;; Now the DMA area, defaulting to 0x0080
        ;; will contain the value which is set.
        LD HL, 0x0080

        ;; Is the value null?
        LD A, (HL)
        CP 0
        jr z, unset


        LD DE, OUTPUT_PREFIX
        LD C, BDOS_OUTPUT_STRING
        CALL BDOS_ENTRY_POINT
        LD HL, 0x0080


        ;; otherwise show the value, character by character.
loopy:
        LD A, (HL)
        cp 0
        JR Z, finished_loop
        push HL
             ld e,a
             ld c, 0x02
             call 0x0005
        pop HL
        inc hl
        jr loopy
finished_loop:
        LD DE, OUTPUT_SUFFIX
        LD C, BDOS_OUTPUT_STRING
        CALL BDOS_ENTRY_POINT
        jr exit


;; The host command-prefix is unset
unset:
        LD DE, UNSET_STRING
        LD C, BDOS_OUTPUT_STRING
        CALL BDOS_ENTRY_POINT
        jr exit


;;
;; Error Routines
;;

not_cpmulator:
        LD DE, WRONG_EMULATOR
        LD C, BDOS_OUTPUT_STRING
        call BDOS_ENTRY_POINT
        jr exit


;;
;; Text output strings.
;;
UNSET_STRING:
        db "The prefix for executing commands on the host is unset.", 0x0a, 0x0d, "Running commands on the host is disabled.", 0x0a, 0x0d, "$"
OUTPUT_PREFIX:
        db "The command-prefix for executing commands on the host is '$"
OUTPUT_SUFFIX:
        db "'.", 0x0a, 0x0d, "$"
WRONG_EMULATOR:
        db "This binary is not running under cpmulator, aborting.", 0x0a, 0x0d, "$"
END
