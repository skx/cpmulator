;; ret.z80 - Demonstrate how to exit cleanly.
;;
;; Call this with an argument, and you'll see it terminate
;; in a different fashion.
;;
;;  1.  jp 0x0000
;;  2.  rst 0
;;  3.  ret
;;  4.  via syscall
;;
;;

;; Address of first/default FCB
;; Used for argument-testing.
FCB1:   EQU 0x5C

        ;; start at 0x0100
        org 0x0100

        ; Get the first character of any argument.
        ld a, (FCB1 + 1)

        ; test for valid options
        cp '1'
        jr z,   one
        cp '2'
        jr z,   two
        cp '3'
        jr z,   three
        cp '4'
        jr z,   four

;; nothing useful, show usage message
show_usage:
        ld     de, usage_message
        ld     c, 9
        call   0x0005

;; exit after showing the usage.
;; but also for option 4.
exit_fn:
        ld      c,0x00
        call    0x0005

one:
        jp      0x0000
two:
        rst     0
three:
        ret
four:
        jr      exit_fn

usage_message:
        DB "Usage: RET [1|2|3|4]", 0x0a, 0x0d
        DB "  1 - Exit via 'JP 0x0000'.", 0x0a, 0x0d
        DB "  2 - Exit via 'RST 0' instruction.", 0x0a, 0x0d
        DB "  3 - Exit via 'RET'.", 0x0a, 0x0d
        DB "  4 - Exit via 'P_TERMCPM' syscall.", 0x0a, 0x0d
        DB "$"
